networks:
  frontend:
    name: frontend
  storage:
    name: storage

volumes:
  data-opensearch:
  data-mongo:

services:
  mongodb:
    image: mongo:${MONGODB_VERSION:-6.0}
    container_name: gio_apim_mongodb
    restart: always
    volumes:
      - data-mongo:/data/db
      - ./.logs/apim-mongodb:/var/log/mongodb
    networks:
      - storage

  opensearch:
    image: opensearchproject/opensearch:${OPENSEARCH_VERSION:-1.1.0}
    container_name: gio_apim_opensearch
    restart: always
    volumes:
      - data-opensearch:/usr/share/opensearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - cluster.name=opensearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - plugins.security.disabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile: 65536
    networks:
      - storage

  gateway:
    image: ${APIM_REGISTRY:-graviteeio}/apim-gateway:${APIM_VERSION:-latest}
    container_name: gio_apim_gateway
    restart: no
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
      - opensearch
    volumes:
      - ./.logs/apim-gateway:/opt/graviteeio-gateway/logs
      - ./.license:/opt/graviteeio-gateway/license
      - /home/brian/Moesif/moesif-gravitee-plugin/plugins-container-volume:/mnt/plugins
      - ./gateway_entrypoint.sh:/bin/gateway_entrypoint.sh
      - ./apim_service_config/logback.xml:/opt/graviteeio-gateway/config/logback.xml
    entrypoint: ["/bin/gateway_entrypoint.sh"]
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_ratelimit_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_reporters_elasticsearch_endpoints_0=http://opensearch:9200
      - gravitee_analytics_elasticsearch_security_username=admin
      - gravitee_analytics_elasticsearch_security_password=admin
    networks:
      - storage
      - frontend

  management_api:
    image: ${APIM_REGISTRY:-graviteeio}/apim-management-api:${APIM_VERSION:-latest}
    container_name: gio_apim_management_api
    restart: always
    ports:
      - "8083:8083"
    links:
      - mongodb
      - opensearch
    depends_on:
      - mongodb
      - opensearch
    entrypoint: ["/bin/gateway_entrypoint.sh"]
    volumes:
      - /home/brian/Moesif/moesif-gravitee-plugin/plugins-container-volume:/mnt/plugins
      - ./gateway_entrypoint.sh:/bin/gateway_entrypoint.sh
      - ./.logs/apim-management-api:/opt/graviteeio-management-api/logs
      - ./.license:/opt/graviteeio-management-api/license
      - ./apim_service_config/logback.xml:/opt/graviteeio-management-api/config/logback.xml
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_analytics_elasticsearch_endpoints_0=http://opensearch:9200
      - gravitee_analytics_elasticsearch_security_username=admin
      - gravitee_analytics_elasticsearch_security_password=admin
    networks:
      - storage
      - frontend

  management_ui:
    image: ${APIM_REGISTRY:-graviteeio}/apim-management-ui:${APIM_VERSION:-latest}
    container_name: gio_apim_management_ui
    restart: always
    ports:
      - "8084:8080"
    depends_on:
      - management_api
    environment:
      - MGMT_API_URL=http://localhost:8083/management/
    volumes:
      - ./.logs/apim-management-ui:/var/log/nginx
    networks:
      - frontend

  portal_ui:
    image: ${APIM_REGISTRY:-graviteeio}/apim-portal-ui:${APIM_VERSION:-latest}
    container_name: gio_apim_portal_ui
    restart: always
    ports:
      - "8085:8080"
    depends_on:
      - management_api
    environment:
      - PORTAL_API_URL=http://localhost:8083/portal
    volumes:
      - ./.logs/apim-portal-ui:/var/log/nginx
    networks:
      - frontend

  echo_service:
    image: hashicorp/http-echo
    container_name: echo_service
    ports:
      - "5678:5678"
    command: "-text='{\"Hello\": \"from Echo Service\"}'"
    networks:
      - frontend
